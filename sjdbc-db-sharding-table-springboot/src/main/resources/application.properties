server.port=8084
spring.application.name = sharding
mybatis.config-location=classpath:META-INF/mybatis-config.xml
logging.config=classpath:logback-spring.xml
spring.shardingsphere.datasource.names=ds0,ds1

# 数据源
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://192.xxx.xxx.111:3306/sharding-test01?useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://192.xxx.xxx.111:3306/sharding-test02?useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# 分表配置user
spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds$->{0..1}.user_$->{0..2}
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=userid
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{userid % 3}
# 分库配置
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=userid
spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{userid % 2}


# 分表配置order
spring.shardingsphere.sharding.tables.order_user.actual-data-nodes=ds$->{0..1}.order_user_$->{0..2}
spring.shardingsphere.sharding.tables.order_user.table-strategy.inline.sharding-column=userid
spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
spring.shardingsphere.sharding.tables.order_user.table-strategy.inline.algorithm-expression=order_user_$->{userid % 3}
#spring.shardingsphere.sharding.tables.user.key-generator.column=id
#spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE

#设置绑定表 ,减少sql语句笛卡尔积
spring.shardingsphere.sharding.binding‐tables[0] = user,order_user

#打印 sql
spring.shardingsphere.props.sql.show = true

spring.datasource.druid.filter.slf4j.enabled=true

#logback配置，记录日志 及打印sql 日志
server.tomcat.accesslog.buffered=true
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=common
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.rename-on-rotate=false
server.tomcat.accesslog.request-attributes-enabled=false
server.tomcat.accesslog.rotate=true
server.tomcat.accesslog.suffix=.log
server.tomcat.basedir=/logs/tomcat
server.tomcat.max-threads=100
server.tomcat.uri-encoding=UTF-8
server.max-http-header-size=65536
logging.level.org.springframework.*=INFO
logging.file=/logs/${spring.application.name}.log
#logging.level.com.cxytiandi=DEBUG

# 打印sql 结果信息
logging.level.com.cxytiandi=TRACE

# 不分库分表的数据源指定
spring.shardingsphere.sharding.default-data-source-name=ds0

# 广播表，每个节点复制一份，适用于配置类的数据
#spring.shardingsphere.sharding.broadcast-tables=loudong